#include<iostream>
using namespace std;
void merge(int arr[],int start,int mid,int end){
    int n1=mid-start+1;
    int n2=end-mid;
    int a[n1],b[n2];
    for(int i=0;i<n1;i++){
        a[i]=arr[start+i];
    }
    for(int i=0;i<n2;i++){
        b[i]=arr[mid+i+1];
    }
    int i=0,j=0,k=start;
    while(i<n1 && j<n2){
        if(a[i]<=b[j]){
            arr[k]=a[i];
            i++;
        }
        else{
            arr[k]=b[j];
            j++;
        }
        k++;
    }
    while(i<n1){
        arr[k]=a[i];
        i++;
        k++;
    }
    while(j<n2){
        arr[k]=b[j];
        j++;
        k++;
    }
}
void mergesort(int arr[],int start,int end){
    if(start<end){
        int mid=(start+end)/2;
        mergesort(arr,start,mid);
        mergesort(arr,mid+1,end);
        merge(arr,start,mid,end);
    }
}
int main(){
    int arr[]={23,11,78,12,11,13,5,6,7,13,22,45};
    int size=sizeof(arr)/sizeof(arr[0]);
    mergesort(arr,0,size-1);
    for(int i=0;i<size;i++){
        cout<<arr[i]<<" ";
    }
    return 0;
}
