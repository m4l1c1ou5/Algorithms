#include<iostream>
using namespace std;
int binary_search(int a[],int start,int last,int key){
    /* Modified form of binary search for finding 
    the location of the given element in sorted array */ 
    int mid=(start+last)/2;
    if(start<=last){
        if(a[mid]==key){
            return mid+1;
        }
        else if(a[mid]>key){
            return binary_search(a,start,mid-1,key);
        }
        else if(a[mid]<key){
            return binary_search(a,mid+1,last,key);
        }
    }
    else{
        if(key>=a[mid]){
            return mid+1;
        }
        else
        {
            return 0;
        }
        
    }
}
void binary_insertion_sort(int a[],int len){
    for(int i=1;i<len;i++){
        int num=binary_search(a,0,i-1,a[i]);
        for(int j=i-1;j>=num;j--){
            int temp=a[j+1];
            a[j+1]=a[j];
            a[j]=temp;
        }
    }
}
int main(){
    int a[]={45,20,56,100,12,23,35,90,80,34,67}; //Given Array for Sorting
    int len=sizeof(a)/sizeof(a[0]);        //finding length of the array
    binary_insertion_sort(a,len);
    for(int i=0;i<len;i++){
        cout<<a[i]<<" ";
    }
    return 0;
}
